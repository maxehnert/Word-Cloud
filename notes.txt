Road Map

1. create individual canvas elements for each word. - done
 2. store them in an array
 - done
3. map over the array and place them all in 1 new large canvas
- done
4. using the above check to make sure there is no overlap
- done
5. Check to make sure the full word in inside the main canvas element
- done
6. Rotate some words 90 degrees
- see test branch for work in progress.
7. Make it efficient!
8. ???
9. new project


- I'm still only keeping 10 words so I can more easily work with the data, but would like to increase which will affect the next point.

- I need to have realistic structure to placing the words in the canvas element without overlap.

- It needs to 'look random' but not actually be random. When it is random, they group too much. I need them to be randomly placed but each time remove the possibility of using the space that was already taken by the previous words.

- If I create separate canvas elements for each word I can then place them in the single large canvas and before placing the next one run a check to make sure there is no overlap.

- if all of them are true then there is overlap. if just one of them is false then there is no overlap
[
  if (RectA.X1 < RectB.X2 &&
      RectA.X2 > RectB.X1 &&
      RectA.Y1 < RectB.Y2 &&
      RectA.Y2 > RectB.Y1)
]

-----
Let's build some dimensions:

Main canvas is width: 1000, height: 500

dimensions from positionArr:

canvas['id’]: ‘starting'
canvas['width’]: 528
canvas['height’]: 149
positionX: 44
positionY: 455

X
44 through (44 + 528)

Y
455 through (455 + 149)

Top Left:
44, 455

Top Right:
(44 + 528), 455

Bottom Left:
44, (455 + 149)

Bottom Right:
(44 + 528), (455 + 149)
-----

store the dimensions in an array? and build a grid that has all position available except those already taken.

Then grab random numbers from the array of remaining positions.

This should speed things up by multiple order of magnitude since the available positions array will keep getting smaller as new words are placed in.

just use .slice() to remove the valid and used coordinate.

------
