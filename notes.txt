Road Map

- I'm still only keeping 10 words so I can more easily work with the data, but would like to increase which will affect the next point.

- I need to have realistic structure to placing the words in the canvas element without overlap.

- It needs to 'look random' but not actually be random. When it is random, they group too much. I need them to be randomly placed but each time remove the possibility of using the space that was already taken by the previous words.

*Note: Jason Davies states this for his word cloud: Instead, we draw each word to a hidden canvas element, and retrieve the pixel data.

Found another example word cloud that uses the same approach but with the help of an external library. This is the simplest approach I can think of currently.
http://stackoverflow.com/questions/306316/determine-if-two-rectangles-overlap-each-other

- Going by the above if I create separate canvas elements for each word I can then place them in the single large canvas and before placing the next one run a check to make sure there is no overlap.

- if all of them are true then there is overlap. if just one of them is false then there is no overlap
[
  if (RectA.X1 < RectB.X2 &&
      RectA.X2 > RectB.X1 &&
      RectA.Y1 < RectB.Y2 &&
      RectA.Y2 > RectB.Y1)
]

-----
Let's build some dimensions:

Main canvas is width: 1000, height: 500

dimensions from positionArr:

canvas['id’]: ‘starting'
canvas['width’]: 528
canvas['height’]: 149
positionX: 44
positionY: 455

X
44 through (44 + 528)

Y
455 through (455 + 149)

Top Left:
44, 455

Top Right:
(44 + 528), 455

Bottom Left:
44, (455 + 149)

Bottom Right:
(44 + 528), (455 + 149)
-----

1. create individual canvas elements for each word. - done
 2. store them in an array
 - done
3. map over the array and place them all in 1 new large canvas
- done
4. using the above check to make sure there is no overlap
5. Check to make sure the full word in inside the main canvas element
6. ???
7. new project


------
- Current problem: if it passes on the first word then it stops and doesn't check any of the other words before it. I think I need another loop in this one to scan over it before making a decision to push the word into the main canvas.
-\-\-\-\-\-\-\-\-\-\-\-\-

- Now I'm usig aniterator to check every word individually   while (!( wordy = iteratePostionArr.next()).done)
-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-

- need a proper break in the while loop so if my overlap check fails it breaks.
- if the overlap check doesn't fail (no overlap on any existing words) then it prints the word.
-\-\-\-\-\-\-\-\-\-\-\-\-\-

- what happens for the first word? it should fail right? so we want to skip the check on the first word
-\-\-\-\-\-\-\-\-\-\-\-\-\-

- is the new coordinate generator working properly?
I think I'm still unsure about this because the above wasn't working properly. It should become obvious once I get the above finished.
------
